SET(EXAMPLE_NAME osgMuti)

# SET(EXAMPLE_FILES hello.cpp)
SET(EXAMPLE_FILES main.cpp)


INCLUDE_DIRECTORIES(AFTER ${WOSG_INCLUDE_BUILD_DIR})
INCLUDE_DIRECTORIES(AFTER ${WOSG_INCLUDE_DIR})

IF(ANDROID)
    ADD_DEFINITIONS(-DOSG_LIBRARY_STATIC)
    ADD_LIBRARY(${EXAMPLE_NAME} SHARED ${EXAMPLE_FILES})
ELSE(ANDROID)
IF(WOSG_USE_STATIC_LIBRARY)
    # message(USE_STATIC_LIBRARY)
    ADD_DEFINITIONS(-DOSG_LIBRARY_STATIC)
    ADD_EXECUTABLE(${EXAMPLE_NAME} ${EXAMPLE_FILES})
ELSE(WOSG_USE_STATIC_LIBRARY)
    # message(NO_USE_STATIC_LIBRARY)
	ADD_EXECUTABLE(${EXAMPLE_NAME} ${EXAMPLE_FILES})
ENDIF(WOSG_USE_STATIC_LIBRARY)
ENDIF(ANDROID)

SET_TARGET_PROPERTIES(${EXAMPLE_NAME} PROPERTIES PROJECT_LABEL "${EXAMPLE_NAME}")
SET_TARGET_PROPERTIES(${EXAMPLE_NAME} PROPERTIES DEBUG_POSTFIX "${CMAKE_DEBUG_POSTFIX}")
SET_TARGET_PROPERTIES(${EXAMPLE_NAME} PROPERTIES OUTPUT_NAME ${EXAMPLE_NAME})

#IF( NOT MINGW AND NOT ANDROID)
#IF(MSVC_IDE AND ${MSVC_VERSION} LESS 1600)
#	SET_TARGET_PROPERTIES(${EXAMPLE_NAME} PROPERTIES  PREFIX "../")
#ENDIF(MSVC_IDE AND ${MSVC_VERSION} LESS 1600)
#IF(MSVC_IDE AND ${MSVC_VERSION} EQUAL 1600)
#    SET_TARGET_PROPERTIES(${EXAMPLE_NAME} PROPERTIES "RUNTIME_OUTPUT_DIRECTORY_RELEASE" "../../bin")
#    SET_TARGET_PROPERTIES(${EXAMPLE_NAME} PROPERTIES "RUNTIME_OUTPUT_DIRECTORY_DEBUG" "../../bin")
#ENDIF(MSVC_IDE AND ${MSVC_VERSION} EQUAL 1600)
#ENDIF( NOT MINGW AND NOT ANDROID )


IF(ANDROID)
# message(${WOSG_LIBRARY_ALL})
# message(${WOSG_LIBRARY_ALL_PLUGINS})
TARGET_LINK_LIBRARIES(${EXAMPLE_NAME}
	# ${WOSG_LIBRARY_ALL}
	# ${WOSG_LIBRARY_ALL_PLUGINS}
	# opengl32 glu32
    # ${OPENGL_LIBRARIES}
    android log
    EGL GLESv1_CM
    android_native_app_glue
	)
    
ELSE()

# windows linux mac
TARGET_LINK_LIBRARIES(${EXAMPLE_NAME}
	${WOSG_LIBRARY_ALL}
	${WOSG_LIBRARY_ALL_PLUGINS}
    ${OPENGL_LIBRARIES}
	)
    
ENDIF(ANDROID)




IF(ANDROID)
INSTALL(TARGETS ${EXAMPLE_NAME} LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)
ELSE(ANDROID)
INSTALL(TARGETS ${EXAMPLE_NAME} RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)
ENDIF(ANDROID)
